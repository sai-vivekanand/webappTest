# This file contains the GitHub Actions workflow for validating the Packer template
# and building the application artifact when a pull request is created.

name: Pull Request Checks 

on:
  pull_request:
    branches: [main]

jobs:

  unit_tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run tests
      run: mvn -B test --file pom.xml

  packer_validation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      
      - name: Build with Maven
        run: mvn clean package -DskipTests
      
      - name: Install Packer
        run: |
          sudo apt-get update && sudo apt-get install packer

      - name: Packer Format Check
        if: github.event_name == 'pull_request'
        run: |
          cd packer
          packer init .
          packer fmt -check .

      - name: Packer Validate
        if: github.event_name == 'pull_request'
        run: |
          cd packer
          # Mock the artifact path variable if it is required for validation
          #touch dummy.jar
          packer validate -var 'artifact_path=${{ github.workspace }}/target/cloud-app-0.0.1-SNAPSHOT.jar' -var 'project_id=csye6225csye' -var 'zone=us-east1-b' cent.pkr.hcl
        
  build_application:
    runs-on: ubuntu-latest
    
    steps:    
    - uses: actions/checkout@v2
    
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        
    - name: Build Application Artifact(s)
      run: mvn clean package -DskipTests
      
    - uses: actions/upload-artifact@v2
      with:
        name: application-artifact
        path: target/*.jar
